@{
    ViewBag.Title = "新增付款单";
}
<div data-pagelimit="paybilladd">
    <div ng-app="myApp" ng-controller="myCtrl">
        @{Html.RenderPartial("/jxcpay/checkboxheader");}
        @{Html.RenderPartial("/jxcpay/employeechoice");}
        @{Html.RenderPartial("/jxcpay/vendorchoice");}
        @{Html.RenderPartial("/jxcpay/vendordetail");}
        @{Html.RenderPartial("/jxcpay/bankchoice");}
        @{Html.RenderPartial("/jxcpay/billcodeconfig");}
        @{Html.RenderPartial("/jxcpay/paybilldetail");}
        @{Html.RenderPartial("/jxcpay/billload2");}
        <ol class="breadcrumb">
            <li><a href="/"><i class="fa fa-home fa-fw"></i>首页</a></li>
            <li><span>付款单</span></li>
        </ol>
        <div class="panel panel-info">
            <div class="panel-heading">
                付款单
                <span style="margin-left:200px;">制单人：{{makername}}</span>
            </div>
            <div class="panel-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="form-group form-inline col-md-4 col-lg-4">
                            <label>单据编号<span style="color:red">*</span></label>
                            <input type="text" class="form-control" ng-readonly="noeditbillcode" name="billcode" ng-model="model.content.billcode" required />
                            <a href="javascript:;" ng-click="billcodeClick()" title="设置编号格式"><i class="fa fa-info-circle"></i></a>
                        </div>
                        <div class="form-group form-inline col-md-8 col-lg-8">
                            <label>单据日期<span style="color:red">*</span></label>
                            <input type="text" class="form-control" ng-if="noeditbilldate" readonly="readonly" ng-model="model.content.billdate" />
                            <div class="dropdown" style="display: inline;" ng-if="!noeditbilldate">
                                <a class="dropdown-toggle billdate" role="button" data-toggle="dropdown" data-target="#"
                                   href="javascript:;">
                                    <div class="input-group">
                                        <input type="text" class="form-control" name="billdate" ng-model="model.content.billdate" required />
                                        <span class="input-group-addon">
                                            <i class="glyphicon glyphicon-calendar"></i>
                                        </span>
                                    </div>
                                </a>
                                <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
                                    <datetimepicker ng-model="model.content.billdate" data-datetimepicker-config="{dropdownSelector: '.billdate',minView:'day',modelType:'YYYY-MM-DD'  }" />
                                </ul>
                            </div>
                        </div>
                        <div class="form-group form-inline col-md-4 col-lg-4">
                            <label>经手人<span style="color:red">*</span></label>
                            <div class="input-group">
                                <input type="text" autocomplete="off" ng-next="true" ng-model="employee" placeholder="编号或名称模糊查询" uib-typeahead="employee.content.name for employee in updateEmployees($viewValue)"
                                       typeahead-on-select="employeeSelected($item, $model, $label,$event)" typeahead-loading="loadingEmployeeLocations"
                                       typeahead-no-results="noEmployeeResults" typeahead-select-on-blur="true" class="form-control">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button" ng-click="employeeClick()">...</button>
                                </span>
                            </div>
                            <i ng-show="loadingEmployeeLocations" class="glyphicon glyphicon-refresh"></i>
                            <span class="text-danger" ng-show="noEmployeeResults">没有匹配项</span>
                        </div>
                        <div class="form-group form-inline col-md-8 col-lg-8">
                            <label>
                                供应商<span style="color:red">*</span>
                            </label>
                            <div class="input-group">
                                <input type="text" autocomplete="off" ng-next="true" ng-model="vendor" placeholder="编号或名称模糊查询" uib-typeahead="vendor.content.name for vendor in updateVendors($viewValue)"
                                       typeahead-on-select="vendorSelected($item, $model, $label,$event)" typeahead-loading="loadingVendorLocations"
                                       typeahead-no-results="noVendorResults" typeahead-select-on-blur="true" class="form-control">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button" ng-click="vendorClick()">...</button>
                                </span>
                            </div>
                            <i ng-show="loadingVendorLocations" class="glyphicon glyphicon-refresh"></i>
                            <span class="text-danger" ng-show="noVendorResults">没有匹配项</span>
                            <a href="javascript:;" ng-click="showVendorDetail()" title="详细信息"><i class="fa fa-info-circle"></i></a>
                        </div>
                        <div class="form-group form-inline col-md-12 col-lg-12">
                            <label>备注</label>
                            <input type="text" class="form-control" style="width:80%" name="comment" ng-model="model.content.comment" />
                            <a href="javascript:;" ng-click="showAttachment=true" title="上传附件"><i class="fa fa-paperclip fa-fw"></i></a>
                        </div>
                        <div class="form-group form-inline col-md-12" ng-show="showAttachment">
                            <label>附件</label>
                            <input type="file" class="form-control" id="file" multiple="multiple" />
                            <button class="btn btn-info" type="button" ng-click="uploadAttachments()"><i class="fa fa-upload fa-fw"></i>上传</button>
                            <img src="~/Content/images/loader.gif" ng-show="uploadwaiter" />
                        </div>
                        <div class="form-group col-md-12">
                            <ul class="list-group">
                                <li class="list-group-item" ng-repeat="m in model.content.attachments">
                                    <a ng-href="{{m.url}}" download="{{m.name}}" ng-bind="m.name"></a>
                                    <span style="margin-left:20px;" ng-bind="m.size"></span>
                                    <a href="javascript:;" title="删除" class="text-danger" ng-click="removeAttachment(m.url)"><i class="fa fa-remove fa-fw"></i></a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="form-group form-inline pull-right">
                    <div class="checkbox">
                        <label><input type="checkbox" ng-change="bybillsChange()" ng-model="bybills" />按单结算</label>
                    </div>
                    <button type="button" class="btn btn-success" style="margin-left:20px;" ng-click="detailClick()"><i class="fa fa-plus fa-fw"></i>新增明细</button>

                </div>
            </div>
            <div style="width:100%;overflow-x:auto;" ng-show="bybills">
                <table ng-table="tableParams2" class="table table-bordered table-condensed table-striped" show-filter="false">
                    <tr ng-repeat="m in $data">
                        <td data-title="'No.'" header-class="'bg-warning'" style="max-width:80px;">
                            <span ng-bind="(tableParams2.page()-1)*tableParams2.count()+$index+1"></span>
                        </td>

                        <td data-title="'单据编号'" header-class="'bg-warning'">
                            <a ng-href="/jxcbillcenter/billdetail?billid={{m.id}}" target="_blank" ng-bind="m.content.billcode" title="查看原始单据"></a>
                        </td>
                        <td data-title="'单据名称'" header-class="'bg-warning'">
                            <span ng-bind=" m.content.billname | billname"></span>
                        </td>
                        <td data-title="'单据日期'" header-class="'bg-warning'">
                            <span ng-bind="m.content.billdate"></span>
                        </td>
                        <td data-title="'经手人'" header-class="'bg-warning'">
                            <span ng-bind="m.content.employeename"></span>
                        </td>
                        <td data-title="'单据金额'" header-class="'bg-warning'">
                            <span ng-bind="m.content.total | currency:'￥'"></span>
                        </td>
                        <td data-title="'已结算金额'" header-class="'bg-warning'">
                            <span ng-bind="m.content.checkouttotal | currency:'￥'"></span>
                        </td>
                        <td data-title="'本次结算金额'" header-class="'bg-warning'">
                            <input type="number" class="tableinput" ng-model="m.content.thischeckouttotal" ng-focus="checkouttotalFocus(m)" ng-model-options="{ updateOn:'blur'}" ng-change="checkouttotalChange(m)" />
                        </td>
                    </tr>
                    <tr class="warning">
                        <td colspan="2">
                            合计
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td ng-bind="billtotalsum | currency:'￥'"></td>
                        <td ng-bind="checkouttotalsum | currency:'￥'"></td>
                        <td ng-bind="thischeckouttotalsum | currency:'￥'"></td>
                    </tr>
                </table>
            </div>

            <div style="width:100%;overflow-x:auto;">
                <table ng-table="tableParams" class="table table-bordered table-condensed table-striped" show-filter="false">
                    <tr ng-repeat="m in $data">
                        <td header-class="'bg-warning'" style="width:60px;">
                            <a ng-click="deleteDetail(m.uuid)" class="text-danger" href="javascript:;" title="删除">
                                <i class="fa fa-trash fa-fw">
                                </i>
                            </a>
                        </td>
                        <td data-title="'No.'" header-class="'bg-warning'" style="width:60px;">
                            <span ng-bind="(tableParams.page()-1)*tableParams.count()+$index+1"></span>
                        </td>
                        <td data-title="'账户编号'" header-class="'bg-warning'"
                            data-sortable="'bank.code'">
                            <span ng-bind="m.bank.code"></span>
                            <a href="javascript:;" title="选择账户" class="pull-right" ng-click="bankChange(m)"><i class="fa fa-ellipsis-h fa-fw"></i></a>
                        </td>
                        <td data-title="'账户名称'" header-class="'bg-warning'">
                            <span ng-bind="m.bank.name"></span>
                        </td>
                        <td data-title="'金额'" header-class="'bg-warning'" style="max-width:100px;">
                            <input type="number" class="tableinput" ng-model="m.total" ng-model-options="{ updateOn:'blur'}" ng-change="totalChange(m)" />
                        </td>
                        <td data-title="'备注'" header-class="'bg-warning'">
                            <input type="text" class="tableinput" ng-model="m.comment" ng-model-options="{ updateOn:'blur'}" />
                        </td>
                    </tr>
                    <tr class="warning">
                        <td colspan="2">
                            合计
                        </td>
                        <td></td>
                        <td></td>
                        <td ng-bind="totalsum | currency:'￥'"></td>
                        <td></td>
                    </tr>
                </table>
            </div>
            <div class="panel-footer">
                <div class="form-group form-inline pull-right">
                    <button type="button" class="btn btn-primary" ng-click="btnloadClick()"><i class="fa fa-folder-open-o fa-fw"></i>单据调阅</button>
                    <button type="button" class="btn btn-primary" ng-click="btnsaveClick()" ng-disabled="savedisabled"><i class="fa fa-save fa-fw"></i>保存草稿</button>
                    <button type="button" class="btn btn-primary" ng-click="btnauditClick()" ng-disabled="savedisabled" ng-limit="paybillaudit"><i class="fa fa-save fa-fw"></i>保存并审核</button>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>

    </div>
</div>
@section styles{
    <link href="https://cdn.bootcss.com/angular-loading-bar/0.8.0/loading-bar.min.css" rel="stylesheet">
    <link href="https://cdn.bootcss.com/ng-table/1.0.0-beta.7/ng-table.min.css" rel="stylesheet">
    <link href="https://cdn.bootcss.com/sweetalert/1.1.0/sweetalert.min.css" rel="stylesheet">
    <link href="https://cdn.bootcss.com/angular-bootstrap-datetimepicker/1.0.1/css/datetimepicker.min.css"
          rel="stylesheet">
    <link href="https://cdn.bootcss.com/jstree/3.2.1/themes/default/style.min.css" rel="stylesheet">
    <style>
        .table td, th {
            text-align: center;
        }

        label {
            min-width: 80px;
        }
    </style>
}
@section scripts{
    <script src="https://cdn.bootcss.com/angular.js/1.4.7/angular.min.js"></script>
    <script src="https://cdn.bootcss.com/angular-sanitize/1.5.7/angular-sanitize.min.js"></script>
    <script src="https://cdn.bootcss.com/angular-ui-bootstrap/0.14.3/ui-bootstrap-tpls.min.js"></script>
    <script src="https://cdn.bootcss.com/ng-table/1.0.0-beta.7/ng-table.js"></script>
    <script src="https://cdn.bootcss.com/sweetalert/1.1.0/sweetalert.min.js"></script>
    <script src="https://cdn.bootcss.com/angular-sweetalert/1.1.2/SweetAlert.min.js"></script>
    <script src="https://cdn.bootcss.com/angular-loading-bar/0.8.0/loading-bar.min.js"></script>
    <script src="https://cdn.bootcss.com/moment.js/2.14.1/moment.min.js"></script>
    <script src="//139.196.218.9/cdn/moment-zh-cn.js"></script>
    <script src="https://cdn.bootcss.com/angular-bootstrap-datetimepicker/1.0.1/js/datetimepicker.min.js"></script>
    <script src="https://cdn.bootcss.com/angular-bootstrap-datetimepicker/1.0.1/js/datetimepicker.templates.min.js"></script>
    <script src="https://cdn.bootcss.com/jstree/3.2.1/jstree.min.js"></script>
    <script src="//139.196.218.9/cdn/ngJsTree.min.js"></script>
    <script src="//139.196.218.9/cdn/myservice.js"></script>
    <script src="//139.196.218.9/cdn/myfilter.js"></script>
    <script src="//139.196.218.9/cdn/ngnext.js"></script>
    <script src="https://cdn.bootcss.com/node-uuid/1.4.7/uuid.min.js"></script>

    <script>
        var app = angular.module('myApp', ['ngTable', 'oitozero.ngSweetAlert', 'angular-loading-bar', 'ui.bootstrap', 'ngJsTree', 'ngNext', 'ui.bootstrap.datetimepicker', 'myservice', 'myfilter']);

        app.controller('myCtrl', function ($scope, $http, $window, $q, NgTableParams, SweetAlert, mytools, $uibModal) {

            $scope.model = { id: 0, content: {} };
            $scope.tableParams = new NgTableParams({ count: 99999 });
            $scope.tableParams2 = new NgTableParams({ count: 10 });

            $window.onbeforeunload = function () {
                if ($scope.tableParams.total() > 0) {
                    return ' ';
                }
            };

            $http.post('/paybillservice/init', {})
                    .success(function (data) {
                        $scope.makername = data.makername;
                        $scope.model.content = data.content;
                        $scope.model.content.attachments = [];
                        $scope.model.content.details = [];

                        $scope.digit = data.digit;
                        $scope.noeditbillcode = data.noeditbillcode;
                        $scope.noeditbilldate = data.noeditbilldate;

                        $scope.tableParams.settings({
                            counts: [],
                            dataset: $scope.model.content.details
                        });
                    });

            $scope.billcodeClick = function () {
                var model = {};
                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'billcodeconfig.html',
                    controller: 'billcodeconfigModalCtrl',
                    size: 'lg',
                    resolve: {
                        model: function () { return model; }
                    }
                });

                modalInstance.result.then(function () {
                    $http.post('/paybillservice/BillCodeConfigSave', { template: model.template })
                        .success(function (data) {
                            if (data.message == 'ok') {
                                $scope.model.content.billcode = data.newcode;
                            } else {
                                SweetAlert.swal({ title: data.message, type: 'error' });
                            }
                        });
                });
            };

            $scope.bybillsChange = function () {
                if (!$scope.model.content.vendorid) {
                    SweetAlert.swal({ title: '请先选择供应商！', type: 'error' });
                    $scope.bybills = false;
                } else {
                    $http.post('/paybillservice/getcheckoutbills', { vendorid: $scope.model.content.vendorid })
                    .success(function (data) {
                        $scope.checkoutbills = data.data;
                        $scope.billtotalsum = data.totalsum;
                        $scope.checkouttotalsum = data.checkouttotalsum;
                        $scope.tableParams2.settings({
                            counts: [],
                            dataset: $scope.checkoutbills
                        });
                    });
                }
            };

            $scope.$watch('model.content.vendorid', function () {
                $scope.bybills = false;
            });

            $scope.checkouttotalFocus = function (bill) {
                if (bill.content.thischeckouttotal === undefined || bill.content.thischeckouttotal === null) {
                    bill.content.thischeckouttotal = bill.content.total - (bill.content.checkouttotal === undefined ? 0 : bill.content.checkouttotal);
                    $scope.checkouttotalChange(bill);
                }
            };

            $scope.checkouttotalChange = function (bill) {
                var thischeckouttotalsum = 0;
                angular.forEach($scope.checkoutbills, function (item) {
                    if (item.content.thischeckouttotal !== undefined && item.content.thischeckouttotal !== null) {
                        thischeckouttotalsum += item.content.thischeckouttotal;
                    }
                });

                $scope.thischeckouttotalsum = thischeckouttotalsum;
            };

            var savecheck = function () {
                if (!$scope.model.content.billcode) {
                    SweetAlert.swal({ title: '请填写单据编号', type: 'error' });
                    return false;
                }
                if (!$scope.model.content.billdate) {
                    SweetAlert.swal({ title: '请填写单据日期', type: 'error' });
                    return false;
                }
                if (!$scope.model.content.employeeid) {
                    SweetAlert.swal({ title: '请填写经手人', type: 'error' });
                    return false;
                }
                if (!$scope.model.content.vendorid) {
                    SweetAlert.swal({ title: '请填写供应商', type: 'error' });
                    return false;
                }
                if ($scope.model.content.details.length === 0) {
                    SweetAlert.swal({ title: '请填写付款明细', type: 'error' });
                    return false;
                }
                for (var i = 0; i < $scope.model.content.details.length; i++) {
                    var detail = $scope.model.content.details[i];
                    var row = i + 1;
                    if (!detail.total) {
                        SweetAlert.swal({ title: '第' + row + '行没有金额', type: 'error' });
                        return false;
                    }
                }

                return true;
            };

            $scope.btnloadClick = function () {
                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'billload.html',
                    controller: 'billloadModalCtrl',
                    size: 'lg'
                });

                modalInstance.result.then(function (billid) {
                    $window.onbeforeunload = null;
                    window.location.href = '/jxcpay/paybilledit?id=' + billid;
                });
            };

            $scope.btnsaveClick = function () {
                if (savecheck() === false) return;

                $scope.savedisabled = true;

                if ($scope.bybills) {
                    var checkoutbills = [];
                    angular.forEach($scope.checkoutbills, function (item) {
                        if (item.content.thischeckouttotal !== undefined
                            && item.content.thischeckouttotal !== null
                            && item.content.thischeckouttotal !== 0) {
                            checkoutbills.push({ billid: item.id, checkouttotal: item.content.thischeckouttotal });
                        }
                    });

                    if (checkoutbills.length > 0) {
                        $scope.model.content.checkoutbills = checkoutbills;
                    }
                }

                $http.post('/paybillservice/addsave', $scope.model)
                    .success(function (data) {
                        $scope.savedisabled = false;
                        if (data.message == 'ok') {

                            if (data.nodraftprint) {
                                SweetAlert.swal({ title: '保存成功', type: 'success' }, function () {
                                    $window.onbeforeunload = null;
                                    window.location.reload();
                                });
                                return;
                            }

                            SweetAlert.swal({
                                title: '保存成功。要打印吗？',
                                text: '如果此处不打印，事后也可以重新调出单据打印',
                                type: "success",
                                showCancelButton: true,
                                cancelButtonText: '取消',
                                confirmButtonColor: "#0099CC",
                                confirmButtonText: '打印',
                                closeOnConfirm: true
                            },
                            function (isConfirm) {
                                if (isConfirm) {
                                    $window.open('/jxcpay/paybillprint?billid=' + data.id);
                                }
                                $window.onbeforeunload = null;
                                window.location.reload();

                            });
                        } else {
                            SweetAlert.swal({ title: data.message, type: 'error' });
                        }
                    });
            };

            $scope.btnauditClick = function () {
                if (savecheck() === false) return;

                $scope.savedisabled = true;

                if ($scope.bybills) {
                    var checkoutbills = [];
                    angular.forEach($scope.checkoutbills, function (item) {
                        if (item.content.thischeckouttotal !== undefined
                            && item.content.thischeckouttotal !== null
                            && item.content.thischeckouttotal !== 0) {
                            checkoutbills.push({ billid: item.id, checkouttotal: item.content.thischeckouttotal });
                        }
                    });

                    if (checkoutbills.length > 0) {
                        $scope.model.content.checkoutbills = checkoutbills;
                    }
                }

                $http.post('/paybillservice/addauditsave', $scope.model)
                    .success(function (data) {
                        $scope.savedisabled = false;
                        if (data.message == 'ok') {

                            SweetAlert.swal({
                                title: '保存并审核成功。要打印吗？',
                                text: '如果此处不打印，事后也可以重新调出单据打印',
                                type: "success",
                                showCancelButton: true,
                                cancelButtonText: '取消',
                                confirmButtonColor: "#0099CC",
                                confirmButtonText: '打印',
                                closeOnConfirm: false
                            },
                            function (isConfirm) {
                                if (isConfirm) {
                                    $window.open('/jxcpay/paybillprint?billid=' + data.id);
                                }
                                $window.onbeforeunload = null;
                                window.location.reload();
                            });
                        } else {
                            SweetAlert.swal({ title: data.message, type: 'error' });
                        }
                    });
            };

            $scope.detailClick = function () {
                var model = { digit: $scope.digit };
                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'billdetail.html',
                    controller: 'billdetailModalCtrl',
                    size: 'lg',
                    resolve: {
                        model: function () { return model; }
                    }
                });

                modalInstance.result.then(function () {
                    $scope.model.content.details.push(model.content);

                    $scope.tableParams.reload();
                });
            };

            $scope.bankChange = function (detail) {
                var model = {};
                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'bankchoice.html',
                    controller: 'bankchoiceModalCtrl',
                    resolve: {
                        model: function () { return model; }
                    }
                });

                modalInstance.result.then(function () {
                    detail.bank = model.content.bank;
                    detail.bankid = model.content.bankid;

                });
            };


            $scope.deleteDetail = function (uuid) {
                SweetAlert.swal({
                    title: '确定要删除吗？',
                    text: '数据删除后无法恢复',
                    type: "warning",
                    showCancelButton: true,
                    cancelButtonText: '取消',
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: '删除',
                    closeOnConfirm: true
                },
                function (isConfirm) {
                    if (!isConfirm) return;

                    for (var i = 0; i < $scope.model.content.details.length; i++) {
                        if ($scope.model.content.details[i].uuid === uuid) {
                            $scope.model.content.details.splice(i, 1);
                            $scope.tableParams.reload();
                            return;
                        }
                    }
                });
            };

            $scope.$watch('model.content.details', function () {

                var totalsum = 0;
                angular.forEach($scope.model.content.details, function (item) {
                    if (item.total) totalsum += item.total;
                });

                $scope.totalsum = totalsum;
            }, true);

            $scope.updateEmployees = function (filter) {
                if (filter === undefined || filter === null) {
                    filter = '';
                }
                var defer = $q.defer();
                $http.post('/commonservice/employeechoice',
                            { filter: filter })
                            .success(function (data) {
                                defer.resolve(data.data);
                            });
                return defer.promise;
            };

            $scope.employeeSelected = function ($item, $model, $label, $event) {
                $scope.model.content.employeeid = $item.id;
            };

            $scope.employeeClick = function () {
                var model = {};
                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'employeechoice.html',
                    controller: 'employeechoiceModalCtrl',
                    resolve: {
                        model: function () { return model; }
                    }
                });

                modalInstance.result.then(function () {
                    $scope.employee = model.employee.content.name;
                    $scope.model.content.employeeid = model.employee.id;
                });
            };

            $scope.updateVendors = function (filter) {
                if (filter === undefined || filter === null) {
                    filter = '';
                }
                var defer = $q.defer();
                $http.post('/commonservice/vendorchoice',
                            { filter: filter })
                            .success(function (data) {
                                defer.resolve(data.data);
                            });
                return defer.promise;
            };

            $scope.vendorSelected = function ($item, $model, $label, $event) {
                $scope.model.content.vendorid = $item.id;
            };

            $scope.vendorClick = function () {
                var model = {};
                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'vendorchoice.html',
                    controller: 'vendorchoiceModalCtrl',
                    size: 'lg',
                    resolve: {
                        model: function () { return model; }
                    }
                });

                modalInstance.result.then(function () {
                    $scope.vendor = model.vendor.content.name;
                    $scope.model.content.vendorid = model.vendor.id;
                });
            };

            $scope.showVendorDetail = function () {
                if (!$scope.model.content.vendorid) return;

                var modalInstance = $uibModal.open({
                    animation: true,
                    templateUrl: 'vendordetail.html',
                    controller: 'vendordetailModalCtrl',
                    resolve: {
                        vendorid: function () { return $scope.model.content.vendorid; }
                    }
                });
            };

            $scope.uploadAttachments = function () {
                var file = document.getElementById('file');
                if (file.files.length == 0) return;

                $scope.uploadwaiter = true;

                var myform = new FormData();
                for (var i = 0; i < file.files.length; i++) {
                    myform.append("files[]", file.files[i]);
                }
                var req = new XMLHttpRequest();
                req.onreadystatechange = function () {
                    if (req.readyState == 4 && req.status == 200) {
                        $scope.uploadwaiter = false;
                        var data = JSON.parse(req.responseText);
                        if (data.message == 'ok') {
                            angular.forEach(data.urls, function (item) {
                                $scope.model.content.attachments.push(item);
                            });
                            SweetAlert.swal({ title: '上传成功！', type: 'success' });
                        } else {
                            SweetAlert.swal({ title: data.message, type: 'error' });
                        }
                    }
                }

                req.open("post", "/upload/uploadfiles", true);
                req.send(myform);
            };

            $scope.removeAttachment = function (url) {
                for (var i = 0; i < $scope.model.content.attachments.length; i++) {
                    if ($scope.model.content.attachments[i].url === url) {
                        $scope.model.content.attachments.splice(i, 1);
                        break;
                    }
                }
            };

        });

        app.controller('billcodeconfigModalCtrl', function ($scope, $uibModalInstance, $http, $q, SweetAlert, mytools, NgTableParams, model) {

            $scope.items = [];

            $http.post('/commonservice/GetBillCodeTemplate', { billname: 'paybill' })
                    .success(function (data) {
                        var template = data.template;
                        var ss = template.split(',');
                        angular.forEach(ss, function (item) {
                            if (item) {
                                $scope.items.push({ value: item });
                            }
                        });
                        var length = $scope.items.length;
                        for (var i = 0; i < 10 - length; i++) {
                            $scope.items.push({ value: '' });
                        }
                    });

            $scope.ok = function () {
                var ss = [];
                angular.forEach($scope.items, function (item) {
                    if (item.value) {
                        ss.push(item.value);
                    }
                });
                model.template = ss.join(',');

                $uibModalInstance.close();
            };

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

        app.controller('billdetailModalCtrl', function ($scope, $uibModalInstance, $http, $q, SweetAlert, mytools, NgTableParams, model) {

            model.content = {};
            $scope.model = JSON.parse(angular.toJson(model));


            $scope.showbankchoice = false;
            $scope.bankClick = function () {
                $scope.showbankchoice = !$scope.showbankchoice;
            };

            var getData = function ($defer, params) {
                var filter = JSON.parse(angular.toJson(params.filter()));
                var sorting = params.sorting();
                var count = params.count();
                var page = params.page();
                $http.post('/commonservice/banklist',
                    { page: page, count: count, sorting: JSON.stringify(sorting), filter: JSON.stringify(filter) })
                    .success(function (data) {
                        $scope.tableParams.total(data.resulttotal);
                        $scope.totalrecordes = data.resulttotal;
                        $scope.datalist = data.data;
                        $defer.resolve(data.data);
                    });
            };

            $scope.tableParams = new NgTableParams({ count: 10 }, { counts: [10, 25], total: 0, getData: getData });

            $scope.updateBanks = function (filter) {
                if (filter === undefined || filter === null) {
                    filter = '';
                }
                var defer = $q.defer();
                $http.post('/commonservice/bankchoice',
                            { filter: filter })
                            .success(function (data) {
                                defer.resolve(data.data);
                            });
                return defer.promise;
            };

            $scope.bankSelected = function ($item, $model, $label, $event) {
                $scope.showbankchoice = false;
                $scope.bank = $item.content.name;
                $scope.model.content.bank = $item.content;
                $scope.model.content.bankid = $item.id;

            };

            $scope.bankChoice = function (bank) {
                $scope.showbankchoice = false;
                $scope.bank = bank.content.name;
                $scope.model.content.bank = bank.content;
                $scope.model.content.bankid = bank.id;

            };


            $scope.ok = function () {
                if (!$scope.model.content.bankid) {
                    SweetAlert.swal({ title: '请选择账户', type: 'error' });
                    return;
                }

                if (!$scope.model.content.total) {
                    SweetAlert.swal({ title: '请填写金额', type: 'error' });
                    return;
                }

                model.content = $scope.model.content;
                model.content.uuid = uuid.v1();
                $uibModalInstance.close();
            };

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

        app.controller('bankchoiceModalCtrl', function ($scope, $uibModalInstance, $http, $q, SweetAlert, model) {

            model.content = {};

            $http.post('/commonservice/banklist', {})
                    .success(function (data) {
                        $scope.banks = data.data;
                    });

            $scope.bankSelected = function (bank) {
                model.content.bank = bank.content;
                model.content.bankid = bank.id;
                $uibModalInstance.close();
            };

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

        app.controller('vendordetailModalCtrl', function ($scope, $uibModalInstance, $http, $q, vendorid) {

            $http.post('/commonservice/vendordetail', { id: vendorid })
                    .success(function (data) {
                        $scope.vendor = data.data;
                    });

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

        app.controller('employeechoiceModalCtrl', function ($scope, $uibModalInstance, $http, $q, model) {

            $http.post('/commonservice/employeelist', {})
                    .success(function (data) {
                        $scope.employees = data.data;
                    });

            $scope.employeeSelected = function (employee) {
                model.employee = employee;
                $uibModalInstance.close();
            };

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

        app.controller('vendorchoiceModalCtrl', function ($scope, $uibModalInstance, $http, $q, NgTableParams, model) {

            $scope.category = {};

            $scope.category.treeConfig = {
                "core": {
                    "animation": 0,
                    "themes": { "stripes": true },
                    "multiple": false
                },
                "plugins": ["types", "wholerow"
                ],
                version: 1
            };

            $http.post('/commonservice/vendorcategorys', {})
                    .success(function (data) {
                        $scope.category.treeData = data;
                        $scope.category.treeConfig.version++;
                    });

            $scope.categoryid = '0';

            var getData = function ($defer, params) {
                var filter = JSON.parse(angular.toJson(params.filter()));
                filter.categoryid = $scope.categoryid;
                var sorting = params.sorting();
                var count = params.count();
                var page = params.page();
                $http.post('/commonservice/vendorlist',
                    { page: page, count: count, sorting: JSON.stringify(sorting), filter: JSON.stringify(filter) })
                    .success(function (data) {
                        $scope.tableParams.total(data.resulttotal);
                        $scope.totalrecordes = data.resulttotal;
                        $scope.datalist = data.data;
                        $defer.resolve(data.data);
                    });
            };

            $scope.tableParams = new NgTableParams({ count: 10 }, { counts: [10, 25], total: 0, getData: getData });

            var selectednode;
            $scope.selectNode = function (node, selected, event) {
                if (selectednode) {
                    angular.element('#treeInstance').jstree(true).set_icon(selectednode, 'fa fa-folder-o fa-fw');
                }
                selectednode = selected.node;
                angular.element('#treeInstance').jstree(true).set_icon(selected.node, 'fa fa-folder-open-o fa-fw');
                $scope.categoryid = selected.node.id;
                $scope.tableParams.reload();
            };

            $scope.vendorSelected = function (vendor) {
                model.vendor = vendor;
                $uibModalInstance.close();
            };

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

        app.controller('billloadModalCtrl', function ($scope, $uibModalInstance, $http, $q, NgTableParams) {

            $scope.filter = {};
            $scope.queryfilter = {};

            var getData = function ($defer, params) {
                var filter = $scope.queryfilter;
                var count = params.count();
                var page = params.page();
                $http.post('/paybillservice/loadbillquery',
                    { page: page, count: count, filter: JSON.stringify(filter) })
                    .success(function (data) {
                        $scope.tableParams.total(data.resulttotal);
                        $scope.totalrecordes = data.resulttotal;
                        $scope.datalist = data.data;
                        $defer.resolve(data.data);
                    });
            };

            $scope.tableParams = new NgTableParams({ count: 10 }, { counts: [10, 25], total: 0, getData: getData });

            $scope.btnqueryClick = function () {
                $scope.queryfilter = JSON.parse(angular.toJson($scope.filter));
                $scope.tableParams.reload();
            };

            $scope.billSelected = function (bill) {
                $uibModalInstance.close(bill.id);
            };

            $scope.cancel = function () {
                $uibModalInstance.dismiss();
            };
        });

    </script>
}