@{
    ViewBag.Title = "首页自定义配置";
}
<div>
    <div>
        <div class="btn-group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                选择组件 <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" id="btnchoicelist">
                <li><a href="javascript:;">请选择</a></li>
            </ul>
        </div>
        <button type="button" class="btn btn-primary" onclick="javascript:saveClick();"><i class="fa fa-save"></i>保存布局</button>
        <a href="/" style="margin-left:10px;">返回首页</a>
        <a href="javascript:;" id="btnemptycomponent" style="margin-left:10px;">清空组件</a>
        <a href="javascript:;" id="btnresetcomponent" style="margin-left:10px;">重新排列</a>
    </div>
    <div id="root" style="margin-top:10px;border-top: 1px solid #ddd;">

    </div>
</div>
@section styles{
    <link href="https://cdn.bootcss.com/jqueryui/1.12.1/jquery-ui.min.css" rel="stylesheet">
}
@section scripts{
    <script src="https://cdn.bootcss.com/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdn.bootcss.com/node-uuid/1.4.8/uuid.min.js"></script>
    <script>
        var componentloader = {};
        var mycomponents = [];

        function libcomponentClick(obj) {
            var component = $(obj).data();
            var guid = uuid.v1();
            if (component.width.indexOf('px') < 0) {
                component.width = component.width + 'px';
            }
            if (component.height.indexOf('px') < 0) {
                component.height = component.height + 'px';
            }
            $('#root').append('<div class="componentinstance thumbnail" id="' + guid
                + '" style="width: ' + component.width + '; height: ' + component.height + ';"></div>');
            $('#' + guid).data(component);
            $('#' + guid).load(component.path, function () {
                $('#' + guid).prepend('<a href="javascript:;" style="float:right;position:relative;top:2px;" onclick="javascript:deleteComponent(this);"><i class="fa fa-remove"></i></a>');
                var init = componentloader[component.name];
                if (typeof (init) == 'function') init(guid);
                $('#' + guid).draggable({ scroll: true, grid: [5, 5] });
                $('#' + guid).resizable({
                    stop: function (event, ui) {
                         
                        var resize = componentloader[component.name + 'resize'];
                        if (typeof (resize) == 'function') resize(guid, ui);
                    }
                });
                 
            });

            var anh = $('#' + guid).offset().top;
            $("html,body").stop().animate({ scrollTop: anh }, 500);
        }

        function deleteComponent(obj) {
            var that = $(obj).parent();

            //插入一个占位div避免错乱
            var css = that.get(0).style.cssText;

            var guid = uuid.v1();
            var component = {};
            component.name = 'blankcomponent';
            component.title = '占位符';
            component.path = '/component/home/blankcomponent';
            component.limit = ''; 
             
            that.before('<div class="componentinstance thumbnail" id="' + guid
                + '" style="border:0;z-index:-9999;' + css + '"></div>');
            $('#' + guid).data(component);             
            that.remove();
        }

        function saveClick() {
            var arr = [];
            $('.componentinstance').each(function () {
                var that = $(this);
                var instance = {};
                instance.name = that.data('name');
                instance.title = that.data('title');
                instance.path = that.data('path');
                instance.limit = that.data('limit');
                instance.guid = that.prop('id');
                instance.style = this.style.cssText;

                arr.push(instance);
            });

            //console.log(arr);
            var config = JSON.stringify(arr);

            $.post('/homepageservice/saveconfig', { config: config }, function (data) {
                if (data.message == 'ok') {
                    alert('保存成功！');
                    window.location.href = '/';
                }
            }, 'json');
        }

        $(function () {
            var loadjs = function (js, index) {
                if (js.length == index) {
                    $.each(mycomponents, function (i, item) {
                        loadcomponent(item);
                    });
                    return;
                }
                var script = js[index];
                var srcreg = /src=['"]?([^'"]*)['"]?/i;
                var src = script.match(srcreg);
                if (src == null) {
                    $('body').append(script);
                    loadjs(js, index + 1);
                } else {
                    var link = src[1];
                    if (link.indexOf('/') == 0) {
                        link = 'http:' + link;
                    }
                    $.getScript(link).done(function () {
                        loadjs(js, index + 1);
                    });
                }
            };

            var loadcomponent = function (component) {
                var guid = component.guid;

                $('#root').append('<div class="componentinstance thumbnail" id="' + guid
                    + '" style="' + component.style + '"></div>');
                $('#' + guid).data(component);
                if (component.name == 'blankcomponent') return;
                $('#' + guid).load(component.path, function () {
                    $('#' + guid).prepend('<a href="javascript:;" style="float:right;position:relative;top:2px;" onclick="javascript:deleteComponent(this);"><i class="fa fa-remove"></i></a>');
                    var init = componentloader[component.name];
                    if (typeof (init) == 'function') init(guid);
                    $('#' + guid).draggable({ scroll: true, grid: [5, 5] });
                    $('#' + guid).resizable({
                        stop: function (event, ui) {

                            var resize = componentloader[component.name + 'resize'];
                            if (typeof (resize) == 'function') resize(guid,ui);
                        }
                    });
                });
            };
            
            $('#btnemptycomponent').click(function () {
                $('#root').empty();
            });

            $('#btnresetcomponent').click(function () {
                $('.componentinstance').each(function () {
                    var component = $(this).data();
                    if (component.name == 'blankcomponent') {
                        $(this).remove();
                        return;
                    }
                    var width = $(this).css('width');
                    var height = $(this).css('height');
                    $(this).get(0).style.cssText = 'position:relative;width: ' + width + '; height: ' + height;

                });
            });

            $.post('/homepageservice/initconfig', function (data) {
                $('#btnchoicelist').empty();
                mycomponents = data.mycomponents;

                var js = [];
                $.each(data.dependency, function (index, item) {
                    $('head').append(item.css);
                    for (var i = 0; i < item.js.length; i++) {
                        js.push(item.js[i]);
                    }
                });

                loadjs(js, 0);

                $.each(data.components, function (index, item) {
                    if (item.name == 'blankcomponent') return;
                    $('#btnchoicelist').append('<li><a href="javascript:;"  onclick="javascript:libcomponentClick(this);" class="libcomponent">' + item.title + '</a></li>');
                    $('.libcomponent').last().data(item);
                });

            }, 'json');
        });
    </script>
}